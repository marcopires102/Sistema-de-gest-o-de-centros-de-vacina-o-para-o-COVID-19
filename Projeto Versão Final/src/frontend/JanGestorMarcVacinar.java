/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.Centro_Vacinacao;
import backend.Gestor;
import backend.Repositorio_Doencas;
import backend.Serializacao;
import backend.Sistema;
import backend.Utente;
import backend.Vacina;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Marco
 */
public class JanGestorMarcVacinar extends javax.swing.JFrame {

    private Sistema sistema;
    private Serializacao dados;
    private Utente utente;
    private LocalDateTime data;

    public JanGestorMarcVacinar(Sistema sistema, Serializacao dados, Utente utente, LocalDateTime data, Vacina vacina) {
        initComponents();
        this.sistema = sistema;
        this.dados = dados;
        this.utente = utente;
        this.data = data;
        preencherVacinas();
        comboVacina.setSelectedItem(vacina.getNome());
        comboVacina.setEnabled(false);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

    }
    
    public JanGestorMarcVacinar(Sistema sistema, Serializacao dados, Utente utente, LocalDateTime data) {
        initComponents();
        this.sistema = sistema;
        this.dados = dados;
        this.utente = utente;
        this.data = data;
        preencherVacinas();
        comboVacina.setEnabled(false);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

    }
    
    
    
     public boolean compararDoencas(Vacina vacina, Utente utente){
        Repositorio_Doencas doencas_utente = utente.getRepDoencas();
        Repositorio_Doencas doencas_vacina = vacina.getDoencas();
        for(int i=0; i<doencas_vacina.qtdDoencas();i++){
            String doenca = doencas_vacina.procurarDoenca(i);
            if(doencas_utente.existeDoenca(doenca)){
                return true;
            }
        }
        return false;
    }
    
    private boolean verificarIdadeComVacina(Vacina vacina, Utente utente) {
        if (utente.calcIdade() >= vacina.getIdadeMin() && utente.calcIdade() <= vacina.getIdadeMax()) {
            return true;
        }
        return false;
    }
    
     public ArrayList<Vacina> melhorVacinaParaUtente(Utente utente) {
         ArrayList<Vacina> vacinas = new ArrayList<Vacina>();
         Centro_Vacinacao c = sistema.getCentros_Vacinacao().procurarPorGestor((Gestor) sistema.getUtilizadorLigado());
        for (Vacina v : c.getStockVacinas().listarVacinas()) {
            if (!compararDoencas(v, utente) && verificarIdadeComVacina(v, utente)) {
                vacinas.add(v);
            }
        }
        return vacinas;
    }
    
    
     
     
    
    public void preencherVacinas(){
        ArrayList<Vacina> vacinas = melhorVacinaParaUtente(utente);
        for(Vacina vacina : vacinas){
            comboVacina.addItem(vacina.getNome());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboVacina = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtEfeitos = new javax.swing.JTextField();
        BtnGuardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 38, 61));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registo Vacinação");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("Tipo de vacinas administradas");

        comboVacina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma vacina" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Efeitos Secundarios Registados");

        BtnGuardar.setBackground(new java.awt.Color(255, 255, 255));
        BtnGuardar.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        BtnGuardar.setForeground(new java.awt.Color(0, 0, 0));
        BtnGuardar.setText("Vacinar");
        BtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGuardarActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(comboVacina, 0, 255, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(txtEfeitos))))
                .addContainerGap(125, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comboVacina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtEfeitos, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnGuardar)
                    .addComponent(jButton1))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGuardarActionPerformed
    
        if(comboVacina.getSelectedItem().toString().equalsIgnoreCase("Selecione uma vacina")){
            JOptionPane.showMessageDialog(this, "Selecione uma vacina para administrar");
            comboVacina.requestFocus();
            return;
        }
        Vacina vacina_adm = null;
        for(Vacina v : sistema.getVacinas()){
            if(v.getNome().equalsIgnoreCase(comboVacina.getSelectedItem().toString())){
                vacina_adm = v;
            }
        }
        LocalDateTime data_dia = LocalDateTime.now();
        Centro_Vacinacao c = sistema.getCentros_Vacinacao().procurarPorGestor((Gestor) sistema.getUtilizadorLigado());
        
        c.getStockVacinas().remover(vacina_adm, 1L);
        c.setVacinasAdministradas(c.getVacinasAdministradas() +1);
        utente.setN_vacinas_tomadas(utente.getN_vacinas_tomadas() + 1);
        utente.getDatas_vacinacao().add(data_dia);
        utente.setVacina(vacina_adm);
        c.getMarcacoesV().Cancelar(data, utente);
        if(!txtEfeitos.getText().trim().isEmpty()){
            Repositorio_Doencas e = c.getEfeitosSecRegs();
            e.adicionar(txtEfeitos.getText());
        }
        dispose();
        if(vacina_adm.getNumTomas() == utente.getN_vacinas_tomadas()){
            utente.setVacina_administrada(true);
            dispose();
            JanGestorMarcacoes janela = new JanGestorMarcacoes(sistema, dados);
            janela.setVisible(true);
        }else{
            dispose();
            JanGestorMarcVacDoses janela = new JanGestorMarcVacDoses(sistema, dados, utente, LocalDateTime.now(), vacina_adm);
            janela.setVisible(true);
        }
    }//GEN-LAST:event_BtnGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
        JanGestor janela = new JanGestor(sistema, dados);
        janela.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnGuardar;
    private javax.swing.JComboBox<String> comboVacina;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEfeitos;
    // End of variables declaration//GEN-END:variables
}
